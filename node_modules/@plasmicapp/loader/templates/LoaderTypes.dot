import type React from "react";

export type ProviderProps = (
  | {
      props: {
        {{~ it.singleProviders :provider}}
          "{{=provider.name}}"?: React.ContextType<typeof import("{{=provider.path}}").{{=provider.name}}Context>,
        {{~}}
      }
  }
  {{~ it.providersWithProjects :providersWithProject}}
  | {
    projectId: "{{=providersWithProject.projectId}}",
    props: {
      {{~ providersWithProject.providers :provider}}
        "{{=provider.name}}"?: React.ContextType<typeof import("{{=provider.path}}").{{=provider.name}}Context>,
      {{~}}
    }
  }
  {{~}}
)

type Providers = {
  {{~ it.providersWithProjects :providersWithProject}}
    "{{=providersWithProject.projectId}}": {
        {{~ providersWithProject.providers :provider}}
          "{{=provider.name}}"?: React.ContextType<typeof import("{{=provider.path}}").{{=provider.name}}Context>,
        {{~}}
    },
  {{~}}
};

export type LoaderProps = (
  {{~ it.singleComponents :component}}
    | { component: "{{=component.name}}", componentProps?: Parameters<typeof import("{{=component.path}}").default>[0], providerProps?: Providers["{{=component.projectId}}"] }
  {{~}}
  {{~ it.components :component}}
    | { component: "{{=component.name}}", projectId: "{{=component.projectId}}", componentProps?: Parameters<typeof import("{{=component.path}}").default>[0], providerProps?: Providers["{{=component.projectId}}"] }
  {{~}}
)
