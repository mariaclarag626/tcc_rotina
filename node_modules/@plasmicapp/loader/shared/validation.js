"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlasmicOptsSchema = void 0;
const joi_1 = __importDefault(require("joi"));
const fs_1 = require("fs");
const upath_1 = __importDefault(require("upath"));
function pathExists(value) {
    return fs_1.promises
        .access(upath_1.default.resolve(value))
        .then(() => value)
        .catch((error) => {
        if (error.code === "ENOENT") {
            throw new Error(`Path not found: ${value}. Please verify your plasmic loader config and try again.`);
        }
        throw new Error(`Could not verify that path ${value} exists. Error: ${error.message}.`);
    });
}
exports.PlasmicOptsSchema = joi_1.default.object({
    dir: joi_1.default.string().required().external(pathExists),
    plasmicDir: joi_1.default.string().required(),
    pageDir: joi_1.default.string().required(),
    projects: joi_1.default.array().items(joi_1.default.string()).required(),
    watch: joi_1.default.boolean(),
    initArgs: joi_1.default.object().pattern(joi_1.default.string(), joi_1.default.string()),
    substitutions: joi_1.default.object({
        components: joi_1.default.array().items(joi_1.default.object({
            name: joi_1.default.string().required(),
            projectId: joi_1.default.string(),
            path: joi_1.default.string().required().external(pathExists),
        })),
    }),
}).messages({
    "object.unknown": "Unknown key {{#label}}. Please verify your plasmic loader config and try again.",
});
