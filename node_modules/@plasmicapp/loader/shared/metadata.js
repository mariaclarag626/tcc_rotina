"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setMetadata = void 0;
const querystring = __importStar(require("querystring"));
/**
 * This is meant to be called set metadata
 * into the PLASMIC_METADATA environment variable
 * @param metadata
 */
function setMetadata(metadata) {
    const fromEnv = process.env.PLASMIC_METADATA
        ? querystring.decode(process.env.PLASMIC_METADATA)
        : {};
    const env = { ...fromEnv };
    for (const [k, v] of Object.entries(metadata)) {
        if (!env[k]) {
            env[k] = v;
        }
    }
    process.env.PLASMIC_METADATA = querystring.encode(env);
}
exports.setMetadata = setMetadata;
