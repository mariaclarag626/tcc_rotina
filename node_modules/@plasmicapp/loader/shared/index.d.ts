import type { PlasmicLoaderConfig, PlasmicOpts } from "./types";
declare type onRegisterPages = (pages: {
    name: string;
    projectId: string;
    path: string;
    url: string;
}[], config: any) => Promise<void>;
export declare function watchForChanges(opts: PlasmicLoaderConfig, onRegisterPages?: onRegisterPages): Promise<void>;
export declare function ensurePlasmicIsNotStale(plasmicDir: string, opts: Partial<PlasmicOpts>): Promise<void>;
export declare function convertOptsToLoaderConfig(userOpts: Partial<PlasmicOpts>, defaultOpts: PlasmicOpts): Promise<PlasmicLoaderConfig>;
export declare function initLoader(config: PlasmicLoaderConfig): Promise<[[void, void, void], void]>;
export declare function onPostInit(config: PlasmicLoaderConfig, watch: boolean, onRegisterPages?: onRegisterPages): Promise<void>;
export declare function maybeAddToGitIgnore(gitIgnorePath: string, name: string): Promise<void>;
export {};
